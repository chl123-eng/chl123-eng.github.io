{"title":"canvas图片压缩上传","uid":"fc9692fb8852291ea0c5a4e4a14a397d","slug":"canvas图片压缩上传","date":"2024-08-28T03:05:04.000Z","updated":"2024-08-28T03:16:32.771Z","comments":true,"path":"api/articles/canvas图片压缩上传.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/compress.jpg","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>uni-app实现将图片压缩后上传到服务器，实现方式：新建canvas画布，设置尺寸来实现压缩，同时显示了图片格式</p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//PicCompress.vue</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;view class=&quot;compress&quot; v-if=&quot;canvasId&quot;&gt;</span><br><span class=\"line\">\t\t&lt;canvas :canvas-id=&quot;canvasId&quot; :style=&quot;&#123; width: canvasSize.width, height: canvasSize.height &#125;&quot;&gt;&lt;/canvas&gt;</span><br><span class=\"line\">\t&lt;/view&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">\tdata() &#123;</span><br><span class=\"line\">\t\treturn &#123;</span><br><span class=\"line\">\t\t\tpic: &#x27;&#x27;,</span><br><span class=\"line\">\t\t\tcanvasSize: &#123;</span><br><span class=\"line\">\t\t\t\twidth: 0,</span><br><span class=\"line\">\t\t\t\theight: 0</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\tcanvasId: &#x27;&#x27;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tmounted() &#123;</span><br><span class=\"line\">\t\t// 创建 canvasId</span><br><span class=\"line\">\t\tif (!uni || !uni._helang_compress_canvas) &#123;</span><br><span class=\"line\">\t\t\tuni._helang_compress_canvas = 1;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tuni._helang_compress_canvas++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tthis.canvasId = `compress-canvas$&#123;uni._helang_compress_canvas&#125;`;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tmethods: &#123;</span><br><span class=\"line\">\t\t// 压缩</span><br><span class=\"line\">\t\tcompressFun(params) &#123;</span><br><span class=\"line\">\t\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t// 等待图片信息</span><br><span class=\"line\">\t\t\t\tlet info = await this.getImageInfo(params.src)</span><br><span class=\"line\">\t\t\t\t\t.then((info) =&gt; info)</span><br><span class=\"line\">\t\t\t\t\t.catch(() =&gt; null);</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t\tif (!info) &#123;</span><br><span class=\"line\">\t\t\t\t\treject(&#x27;获取图片信息异常&#x27;);</span><br><span class=\"line\">\t\t\t\t\treturn;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t\t// 设置最大 &amp; 最小 尺寸</span><br><span class=\"line\">\t\t\t\tconst maxSize = params.maxSize || 1080;</span><br><span class=\"line\">\t\t\t\tconst minSize = params.minSize || 640;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t\t// 当前图片尺寸</span><br><span class=\"line\">\t\t\t\tlet &#123; width, height &#125; = info;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t\t// 非 H5 平台进行最小尺寸校验</span><br><span class=\"line\">\t\t\t\t// #ifndef H5</span><br><span class=\"line\">\t\t\t\tif (width &lt;= minSize &amp;&amp; height &lt;= minSize) &#123;</span><br><span class=\"line\">\t\t\t\t\tresolve(params.src);</span><br><span class=\"line\">\t\t\t\t\treturn;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t// #endif</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t\t// 最大尺寸计算</span><br><span class=\"line\">\t\t\t\t//（图像的宽度和高度是否超过最大尺寸。如果其中任一维度超过最大尺寸，代码将对图像进行调整，以使其适应最大尺寸并保持其宽高比。）</span><br><span class=\"line\">\t\t\t\t// 这样可以确保图像在调整大小后仍保持原始比例，并且不会超过指定的最大尺寸</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t\tif (width &gt; maxSize || height &gt; maxSize) &#123;</span><br><span class=\"line\">\t\t\t\t\tif (width &gt; height) &#123;</span><br><span class=\"line\">\t\t\t\t\t\theight = Math.floor(height / (width / maxSize));</span><br><span class=\"line\">\t\t\t\t\t\twidth = maxSize;</span><br><span class=\"line\">\t\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\t\twidth = Math.floor(width / (height / maxSize));</span><br><span class=\"line\">\t\t\t\t\t\theight = maxSize;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t\t// 设置画布尺寸</span><br><span class=\"line\">\t\t\t\tthis.$set(this, &#x27;canvasSize&#x27;, &#123;</span><br><span class=\"line\">\t\t\t\t\twidth: `$&#123;width&#125;px`,</span><br><span class=\"line\">\t\t\t\t\theight: `$&#123;height&#125;px`</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t\t// Vue.nextTick 回调在 App 有异常，则使用 setTimeout 等待DOM更新</span><br><span class=\"line\">\t\t\t\tsetTimeout(() =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t// 创建 canvas 绘图上下文（指定 canvasId）。在自定义组件下，第二个参数传入组件实例this，以操作组件内 &lt;canvas/&gt; 组件</span><br><span class=\"line\">\t\t\t\t\t// Tip: 需要指定 canvasId，该绘图上下文只作用于对应的 &lt;canvas/&gt;</span><br><span class=\"line\">\t\t\t\t\tconst ctx = uni.createCanvasContext(this.canvasId, this);</span><br><span class=\"line\">\t\t\t\t\t// 清除画布上在该矩形区域内的内容。（x，y，宽，高）</span><br><span class=\"line\">\t\t\t\t\tctx.clearRect(0, 0, width, height);</span><br><span class=\"line\">\t\t\t\t\t// 绘制图像到画布。（所要绘制的图片资源，x，y，宽，高）</span><br><span class=\"line\">\t\t\t\t\tctx.drawImage(info.path, 0, 0, width, height);</span><br><span class=\"line\">\t\t\t\t\t// 将之前在绘图上下文中的描述（路径、变形、样式）画到 canvas 中。</span><br><span class=\"line\">\t\t\t\t\t// 本次绘制是否接着上一次绘制，即reserve参数为false，则在本次调用drawCanvas绘制之前native层应先清空画布再继续绘制；若reserver参数为true，则保留当前画布上的内容，本次调用drawCanvas绘制的内容覆盖在上面，默认 false</span><br><span class=\"line\">\t\t\t\t\t// 绘制完成后回调</span><br><span class=\"line\">\t\t\t\t\tctx.draw(false, () =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\t// 把当前画布指定区域的内容导出生成指定大小的图片，并返回文件路径。在自定义组件下，第二个参数传入自定义组件实例，以操作组件内 &lt;canvas&gt; 组件。</span><br><span class=\"line\">\t\t\t\t\t\tuni.canvasToTempFilePath(</span><br><span class=\"line\">\t\t\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tx: 0, //画布x轴起点（默认0）</span><br><span class=\"line\">\t\t\t\t\t\t\t\ty: 0, //画布y轴起点（默认0）</span><br><span class=\"line\">\t\t\t\t\t\t\t\twidth: width, //画布宽度（默认为canvas宽度-x）</span><br><span class=\"line\">\t\t\t\t\t\t\t\theight: height, //画布高度（默认为canvas高度-y</span><br><span class=\"line\">\t\t\t\t\t\t\t\tdestWidth: width, //图片宽度（默认为 width * 屏幕像素密度）</span><br><span class=\"line\">\t\t\t\t\t\t\t\tdestHeight: height, //输出图片高度（默认为 height * 屏幕像素密度）</span><br><span class=\"line\">\t\t\t\t\t\t\t\tcanvasId: this.canvasId, //画布标识，传入 &lt;canvas/&gt; 的 canvas-id（支付宝小程序是id、其他平台是canvas-id）</span><br><span class=\"line\">\t\t\t\t\t\t\t\tfileType: params.fileType || &#x27;png&#x27;, //目标文件的类型，只支持 &#x27;jpg&#x27; 或 &#x27;png&#x27;。默认为 &#x27;png&#x27;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tquality: params.quality || 0.9, //图片的质量，取值范围为 (0, 1]，不在范围内时当作1.0处理</span><br><span class=\"line\">\t\t\t\t\t\t\t\tsuccess: (res) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t// 在H5平台下，tempFilePath 为 base64</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tresolve(res.tempFilePath);</span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tfail: (err) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\treject(null);</span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t\t\t\tthis</span><br><span class=\"line\">\t\t\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t\t&#125;, 300);</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t// 获取图片信息</span><br><span class=\"line\">\t\tgetImageInfo(src) &#123;</span><br><span class=\"line\">\t\t\treturn new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\tuni.getImageInfo(&#123;</span><br><span class=\"line\">\t\t\t\t\tsrc,</span><br><span class=\"line\">\t\t\t\t\tsuccess: (info) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\tresolve(info);</span><br><span class=\"line\">\t\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t\tfail: (err) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\tconsole.log(err, &#x27;err===获取图片信息&#x27;);</span><br><span class=\"line\">\t\t\t\t\t\treject(null);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t// 批量压缩</span><br><span class=\"line\">\t\tasync compress(params) &#123;</span><br><span class=\"line\">\t\t\t// 初始化状态变量</span><br><span class=\"line\">\t\t\tlet [index, done, fail] = [0, 0, 0];</span><br><span class=\"line\">\t\t\tlet paths = [];</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t// 处理待压缩图片列表 </span><br><span class=\"line\">\t\t\tlet waitList = Array.isArray(params.src) ? params.src : [params.src];</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t// 批量压缩方法</span><br><span class=\"line\">\t\t\tlet batch = async () =&gt; &#123;</span><br><span class=\"line\">\t\t\t\twhile (index &lt; waitList.length) &#123;</span><br><span class=\"line\">\t\t\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\t\t\tconst path = await next();</span><br><span class=\"line\">\t\t\t\t\t\tdone++;</span><br><span class=\"line\">\t\t\t\t\t\tpaths.push(path);</span><br><span class=\"line\">\t\t\t\t\t\tparams.progress?.(&#123; done, fail, count: waitList.length &#125;);</span><br><span class=\"line\">\t\t\t\t\t&#125; catch (error) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tfail++;</span><br><span class=\"line\">\t\t\t\t\t\tparams.progress?.(&#123; done, fail, count: waitList.length &#125;);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tindex++;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">\t\t\t// 单个图片压缩方法</span><br><span class=\"line\">\t\t\tlet next = () =&gt; &#123;</span><br><span class=\"line\">\t\t\t\tconst currentSrc = waitList[index];</span><br><span class=\"line\">\t\t\t\treturn this.compressFun(&#123;</span><br><span class=\"line\">\t\t\t\t\tsrc: currentSrc,</span><br><span class=\"line\">\t\t\t\t\tmaxSize: params.maxSize,</span><br><span class=\"line\">\t\t\t\t\tfileType: params.fileType,</span><br><span class=\"line\">\t\t\t\t\tquality: params.quality,</span><br><span class=\"line\">\t\t\t\t\tminSize: params.minSize</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t// 返回Promise并处理结果</span><br><span class=\"line\">\t\t\treturn new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\t\tbatch()</span><br><span class=\"line\">\t\t\t\t\t\t.then(() =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tif (typeof params.src === &#x27;string&#x27;) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tresolve(paths[0]);</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tresolve(paths);</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t\t\t.catch((error) =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\treject(error);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t\t&#125; catch (error) &#123;</span><br><span class=\"line\">\t\t\t\t\treject(error);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">.compress &#123;</span><br><span class=\"line\">\tposition: fixed;</span><br><span class=\"line\">\twidth: 12px;</span><br><span class=\"line\">\theight: 12px;</span><br><span class=\"line\">\toverflow: hidden;</span><br><span class=\"line\">\ttop: -99999px;</span><br><span class=\"line\">\tleft: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>&#x2F;&#x2F;使用实例</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;view&gt;</span><br><span class=\"line\">        &lt;FileCompress ref=&quot;helangCompress&quot; /&gt;</span><br><span class=\"line\">        &lt;view class=&quot;imgItem&quot; @click=&quot;uploadImg()&quot;&gt;上传文件&lt;/view&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">&lt;/template&gt; </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import FileCompress from &#x27;./FileCompress.vue&#x27;;</span><br><span class=\"line\">import &#123; BASE_URL &#125; from &#x27;../../config&#x27;</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">    components: &#123;</span><br><span class=\"line\">        FileCompress</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data()&#123;</span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        uploadImg() &#123;</span><br><span class=\"line\">            let _this = this</span><br><span class=\"line\">            uni.chooseImage(&#123;</span><br><span class=\"line\">                count: 1,</span><br><span class=\"line\">                sizeType: [&#x27;original&#x27;, &#x27;compressed&#x27;],</span><br><span class=\"line\">                success: function(res) &#123;</span><br><span class=\"line\">                    let imgUrl = res.tempFilePaths[0]</span><br><span class=\"line\">                    let fileType = &#x27;&#x27;</span><br><span class=\"line\">                    //根据原始图片后缀生成响应的图片格式 (此处可自行修改)</span><br><span class=\"line\">                    fileType = _this.getImageFormatFromUrl(imgUrl)</span><br><span class=\"line\">                    if (fileType != &#x27;png&#x27;) &#123;</span><br><span class=\"line\">                        fileType = &#x27;jpg&#x27;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    // 单张压缩 </span><br><span class=\"line\">                    _this.$refs.helangCompress.compressFun(&#123;</span><br><span class=\"line\">                        src: imgUrl, //图片地址</span><br><span class=\"line\">                        maxSize: 800, //压缩后的最大尺寸</span><br><span class=\"line\">                        fileType: fileType, //压缩后的图片格式</span><br><span class=\"line\">                        quality: 0.1, //压缩的质量比 </span><br><span class=\"line\">                        minSize: -1 //最小压缩尺寸，图片尺寸小于该值时不压缩，非H5平台有效。若需要忽略该设置，可设置为一个极小的值，比如负数。</span><br><span class=\"line\">                    &#125;).then((res) =&gt; &#123;</span><br><span class=\"line\">                        // 压缩成功回调</span><br><span class=\"line\">                        console.log(&#x27;压缩的成功回调&#x27;, res)</span><br><span class=\"line\">                        //上传文件</span><br><span class=\"line\">                        uni.uploadFile(&#123;</span><br><span class=\"line\">                            url:BASE_URL + &#x27;/index.php/Api/Index/upload_file&#x27;,</span><br><span class=\"line\">                            filePath: res,</span><br><span class=\"line\">                            name: &#x27;file&#x27;,</span><br><span class=\"line\">                            formData: &#123;</span><br><span class=\"line\">                                path: &#x27;path&#x27;</span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                            success: (res2) =&gt; &#123;</span><br><span class=\"line\">                                </span><br><span class=\"line\">                            &#125;,</span><br><span class=\"line\">                            fail:(err)=&gt;&#123;</span><br><span class=\"line\">                                </span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;).catch((err) =&gt; &#123;</span><br><span class=\"line\">                        // 压缩失败回调  </span><br><span class=\"line\">                        console.log(&#x27;压缩的失败回调&#x27;, err)</span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                fail: function(err) &#123;</span><br><span class=\"line\">                    console.log(&#x27;上传失败&#x27;, err)</span><br><span class=\"line\">                    </span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        //获取图片后缀</span><br><span class=\"line\">        getImageFormatFromUrl(url) &#123;</span><br><span class=\"line\">            // 使用正则表达式找到URL中最后一个&quot;.&quot;后的所有字符，这通常是文件扩展名</span><br><span class=\"line\">            const match = url.match(/\\.([^.]+)$/);</span><br><span class=\"line\">            // 返回匹配到的文件扩展名，如果没有匹配到则返回null</span><br><span class=\"line\">            return match ? match[1] : null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","text":"前言uni-app实现将图片压缩后上传到服务器，实现方式：新建canvas画布，设置尺寸来实现压缩，同时显示了图片格式 代码实现1234567891011121...","permalink":"/post/canvas图片压缩上传","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"常用组件封装","slug":"常用组件封装","count":2,"path":"api/categories/常用组件封装.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">代码实现</span></a></li></ol>","author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"小程序分包","uid":"8cb2683bb6a5c8d0f688364471819883","slug":"小程序分包","date":"2024-05-10T07:08:26.000Z","updated":"2024-06-27T03:22:12.994Z","comments":true,"path":"api/articles/小程序分包.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":[],"text":"前言微信小程序分包常用于代码量较大的小程序，发布时会受到大小限制 什么是分包分包指的是把一个完整的小程序项目，按照需求划分为不同的子包，在构建时打包成不同的分包...","permalink":"/post/小程序分包","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"总结","slug":"总结","count":3,"path":"api/categories/总结.json"}],"tags":[{"name":"小程序","slug":"小程序","count":1,"path":"api/tags/小程序.json"}],"author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"canvas海报生成","uid":"335d9cb5036a0b096de0cd53f0ef9182","slug":"canvas海报生成","date":"2024-08-27T09:44:24.000Z","updated":"2024-08-27T09:48:16.120Z","comments":true,"path":"api/articles/canvas海报生成.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/switchTab1.jpg","text":"前言生成商品海报进行分享或保存 安装html2canvas，引入123npm install html2canvasimport html2canvas fro...","permalink":"/post/canvas海报生成","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"总结","slug":"总结","count":3,"path":"api/categories/总结.json"}],"tags":[],"author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}