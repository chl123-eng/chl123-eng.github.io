{"title":"旧版本Vuex如何做持久化","uid":"fc0084e39f16c44f947668a585ecf5c2","slug":"Vuex本地持久化","date":"2024-02-10T16:00:00.000Z","updated":"2024-06-07T03:20:18.000Z","comments":true,"path":"api/articles/Vuex本地持久化.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/20240607111025.png","content":"<h2 id=\"怎么实现vuex的持久化缓存\"><a href=\"#怎么实现vuex的持久化缓存\" class=\"headerlink\" title=\"怎么实现vuex的持久化缓存\"></a>怎么实现vuex的持久化缓存</h2><p>Vuex持久化缓存通常指的是将Vuex中的state状态保存到本地存储中，这样即使在页面刷新或关闭后，重新打开页面仍然可以恢复之前的状态。实现Vuex持久化缓存有几种不同的方法，以下是一些常见的实现方式：</p>\n<h2 id=\"使用localStorage或sessionStorage\"><a href=\"#使用localStorage或sessionStorage\" class=\"headerlink\" title=\"使用localStorage或sessionStorage\"></a>使用localStorage或sessionStorage</h2><p>我们可以手动将Vuex的state序列化后保存到localStorage或sessionStorage中，并在应用启动时从存储中恢复状态。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 保存state到localStorage</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">saveToStorage</span>(<span class=\"params\">state</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;vuex-state&#x27;</span>, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(state));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">​</span><br><span class=\"line\"><span class=\"comment\">// 从localStorage恢复state</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">loadFromStorage</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> storedState = <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;vuex-state&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> storedState ? <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(storedState) : &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">​</span><br><span class=\"line\"><span class=\"comment\">// 在Vuex的mutations中使用</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mutations = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">saveState</span>(<span class=\"params\">state</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">saveToStorage</span>(state);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">​</span><br><span class=\"line\"><span class=\"comment\">// 在Vuex的actions中恢复state</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> actions = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">restoreState</span>(<span class=\"params\">&#123; commit &#125;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> savedState = <span class=\"title function_\">loadFromStorage</span>();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(savedState).<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;hydrateState&#x27;</span>, savedState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">​</span><br><span class=\"line\"><span class=\"comment\">// 在组件中或在应用启动时调用恢复state的action</span></span><br><span class=\"line\"><span class=\"title function_\">dispatch</span>(<span class=\"string\">&#x27;restoreState&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"快速使用：vuex-persist插件\"><a href=\"#快速使用：vuex-persist插件\" class=\"headerlink\" title=\"快速使用：vuex-persist插件\"></a>快速使用：vuex-persist插件</h3><p><strong>npm install vuex-persist，然后，在我们的Vuex store中使用这个插件：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">javascript复制代码<span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vuex</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> vuexPersist <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex-persist&#x27;</span>;</span><br><span class=\"line\">​</span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">Vuex</span>);</span><br><span class=\"line\">​</span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title class_\">Store</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...我们的state, mutations, actions等</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">​</span><br><span class=\"line\"><span class=\"keyword\">const</span> vuexPersist = <span class=\"keyword\">new</span> <span class=\"title function_\">vuexPersist</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">key</span>: <span class=\"string\">&#x27;vuex&#x27;</span>, <span class=\"comment\">// 存储的名称</span></span><br><span class=\"line\">  <span class=\"attr\">storage</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>, <span class=\"comment\">// 存储方式，可以选择sessionStorage或localStorage</span></span><br><span class=\"line\">  <span class=\"comment\">// 其他配置...</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">​</span><br><span class=\"line\"><span class=\"comment\">// 使用插件</span></span><br><span class=\"line\">vuexPersist.<span class=\"title function_\">plugin</span>(store);</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong></p>\n<ol>\n<li>序列化: 当我们将state保存到本地存储时，确保state中的数据可以被序列化。这意味着state中不应该包含函数、undefined等不能被JSON序列化的数据。</li>\n<li>安全性: 存储在localStorage或sessionStorage中的数据可以被同源的任何JavaScript代码访问，因此不要存储敏感信息。<br>性能: 避免频繁地读写本地存储，因为这可能会影响性能。</li>\n</ol>\n<h2 id=\"vuex-persist-插件扩展\"><a href=\"#vuex-persist-插件扩展\" class=\"headerlink\" title=\"vuex-persist 插件扩展\"></a>vuex-persist 插件扩展</h2><p>vuex-persist是一个第三方Vuex插件，它提供了一种简便的方式来持久化Vuex的状态。这个插件的实现基于几个关键步骤：</p>\n<ol>\n<li>序列化状态: 插件首先会将Vuex store的状态（state）序列化成JSON字符串。这是通过JSON.stringify()实现的，确保状态对象中所有的数据都是可以被序列化的。</li>\n<li>存储状态: 序列化后的状态字符串被保存到浏览器的localStorage或sessionStorage中。vuex-persist允许我们通过配置来选择使用哪一种存储方式。<br>监听状态变化: 插件会监听Vuex store的状态变化。每当状态发生变化时，插件都会自动将新的状态序列化并更新到本地存储中。这通常是通过订阅Vuex store的mutation事件来实现的。</li>\n<li>恢复状态: 当应用启动或者需要从持久化存储中恢复状态时，插件会从localStorage或sessionStorage中读取状态字符串，并使用JSON.parse()将其解析回原始的对象结构。</li>\n<li>自动恢复: vuex-persist通常在Vuex store初始化时自动执行状态恢复的逻辑。这意味着在我们的应用启动时，如果本地存储中有保存的状态，vuex-persist会自动恢复这些状态。</li>\n<li>配置选项: vuex-persist提供了多种配置选项，允许我们定制化持久化的行为。例如，我们可以配置要持久化的state片段（通过paths选项），或者设置一个函数来在保存之前过滤状态（通过reducer选项）。</li>\n<li>版本控制: 插件还可以处理版本控制问题，如果我们的应用升级后state结构发生了变化，vuex-persist可以通过配置（如reducer函数）来确保向后兼容。</li>\n<li>集成Vuex严格模式: 当Vuex store配置为严格模式时，vuex-persist能够确保所有状态的变更都是通过mutations进行的，即使这些变更是由插件自身触发的。</li>\n</ol>\n","text":"Vuex如何实现本地持久化？...","permalink":"/post/Vuex本地持久化","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Vue","slug":"Vue","count":5,"path":"api/tags/Vue.json"},{"name":"Vuex","slug":"Vuex","count":1,"path":"api/tags/Vuex.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0vuex%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96%E7%BC%93%E5%AD%98\"><span class=\"toc-text\">怎么实现vuex的持久化缓存</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8localStorage%E6%88%96sessionStorage\"><span class=\"toc-text\">使用localStorage或sessionStorage</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%EF%BC%9Avuex-persist%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">快速使用：vuex-persist插件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#vuex-persist-%E6%8F%92%E4%BB%B6%E6%89%A9%E5%B1%95\"><span class=\"toc-text\">vuex-persist 插件扩展</span></a></li></ol>","author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"uniapp下小程序获取详细定位","uid":"2ea9c9ee829119d28adc607282fb8e16","slug":"uniapp下小程序获取详细定位","date":"2024-04-15T07:53:36.000Z","updated":"2024-06-27T03:15:45.598Z","comments":true,"path":"api/articles/uniapp下小程序获取详细定位.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/gddt.png","text":"前言uniapp自带的API uni.getLocation 仅APP端支持获取adress，小程序是不支持的。 因此可以借助腾讯/高德的API 地理/逆地理编...","permalink":"/post/uniapp下小程序获取详细定位","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"经验","slug":"经验","count":3,"path":"api/categories/经验.json"}],"tags":[{"name":"uniapp小程序","slug":"uniapp小程序","count":1,"path":"api/tags/uniapp小程序.json"},{"name":"地图","slug":"地图","count":1,"path":"api/tags/地图.json"}],"author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"服务器之正向代理和反向代理","uid":"d02145c722134b6141381c5add87923b","slug":"服务器之正向代理和反向代理","date":"2021-07-27T16:00:00.000Z","updated":"2024-06-07T03:20:18.000Z","comments":true,"path":"api/articles/服务器之正向代理和反向代理.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/http01.png","text":"最近公司商家入驻准备上线，和运维在服务器代理这边折腾了不少时间，现在重新归纳一下正向代理和反向代理的相关概念和区别 正向代理简述：正向代理服务器作接受来自客户端...","permalink":"/post/服务器之正向代理和反向代理","photos":[],"count_time":{"symbolsCount":908,"symbolsTime":"1 mins."},"categories":[{"name":"总结","slug":"总结","count":2,"path":"api/categories/总结.json"}],"tags":[{"name":"http","slug":"http","count":2,"path":"api/tags/http.json"}],"author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}