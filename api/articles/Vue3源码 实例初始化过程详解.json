{"title":"Vue3源码 实例初始化过程详解","uid":"8244f2f98fb7537fa6df6a08feffa028","slug":"Vue3源码 实例初始化过程详解","date":"2022-02-23T16:00:00.000Z","updated":"2024-06-07T03:20:18.000Z","comments":true,"path":"api/articles/Vue3源码 实例初始化过程详解.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/vue-01.jpg","content":"<p>自己接触 Vue3 也有一段时间了 之前一直有看相关的源码，现在总结下 creatApp 到 mount 挂载中间发生了什么</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>下面的代码均为精简版 删掉了部分不相关的代码</p></blockquote>\n<h2 id=\"查看入口文档\"><a href=\"#查看入口文档\" class=\"headerlink\" title=\"查看入口文档\"></a>查看入口文档</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// vue-next/packages/runtime-dom/src/index.ts</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*   nodeOps: packages/runtime-dom/src/nodeOps.ts   patchProp: packages/runtime-dom/src/patchProp.ts   renderOptions为 合并nodeOps和patchProp对象， 为后面vnode的patch操作提供一系列更新dom和内部属性的方法 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> rendererOptions = <span class=\"title function_\">extend</span>(&#123; patchProp, forcePatchProp &#125;, nodeOps)  <span class=\"keyword\">let</span> <span class=\"attr\">renderer</span>: <span class=\"title class_\">Renderer</span>&lt;<span class=\"title class_\">Element</span>&gt; | <span class=\"title class_\">HydrationRenderer</span></span><br><span class=\"line\"><span class=\"comment\">/*   1.判断renderer值 实质上是执行了 packages/runtime-core/src/renderer.ts的 baseCreateRenderer里面所返回对象的里面的createApp方法 */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ensureRenderer</span>(<span class=\"params\"></span>) &#123;   <span class=\"keyword\">return</span> renderer || (renderer = createRenderer&lt;<span class=\"title class_\">Node</span>, <span class=\"title class_\">Element</span>&gt;(rendererOptions)) &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 标准化组件</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">normalizeContainer</span>(<span class=\"params\">  container: Element | ShadowRoot | string </span>): <span class=\"title class_\">Element</span> | <span class=\"literal\">null</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">isString</span>(container)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(container)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (__DEV__ &amp;&amp; !res) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">warn</span>(<span class=\"string\">`Failed to mount app: mount target selector &quot;<span class=\"subst\">$&#123;container&#125;</span>&quot; returned null.`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> container <span class=\"keyword\">as</span> any</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">createApp</span> = (<span class=\"params\">...args</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 实际调用了packages/runtime-core/src/apiCreateApp.ts的createAppAPI方法(柯里化函数)返回的createApp</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> app = <span class=\"title function_\">ensureRenderer</span>().<span class=\"title function_\">createApp</span>(...args);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; mount &#125; = app;</span><br><span class=\"line\">  app.<span class=\"property\">mount</span> = (<span class=\"attr\">containerOrSelector</span>: <span class=\"title class_\">Element</span> | <span class=\"title class_\">ShadowRoot</span> | string): <span class=\"function\"><span class=\"params\">any</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断是否是真实的dom 如果不是就通过document.querySelector获取</span></span><br><span class=\"line\">    <span class=\"comment\">// 找不到就会报警告</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> container = <span class=\"title function_\">normalizeContainer</span>(containerOrSelector);</span><br><span class=\"line\">    <span class=\"comment\">// 没有找到dom节点就直接退出函数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!container) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> component = app.<span class=\"property\">_component</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_\">isFunction</span>(component) &amp;&amp; !component.<span class=\"property\">render</span> &amp;&amp; !component.<span class=\"property\">template</span>) &#123;</span><br><span class=\"line\">      component.<span class=\"property\">template</span> = container.<span class=\"property\">innerHTML</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 挂载前清空内容</span></span><br><span class=\"line\">    container.<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 执行挂载dom操作</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> proxy = <span class=\"title function_\">mount</span>(container);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (container <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Element</span>) &#123;</span><br><span class=\"line\">      container.<span class=\"title function_\">removeAttribute</span>(<span class=\"string\">&quot;v-cloak&quot;</span>);</span><br><span class=\"line\">      container.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&quot;data-v-app&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 返回vnode的proxy对象</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> proxy;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">createAppContext</span>(<span class=\"params\"></span>): <span class=\"title class_\">AppContext</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">app</span>: <span class=\"literal\">null</span> <span class=\"keyword\">as</span> any,</span><br><span class=\"line\">    <span class=\"attr\">config</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">isNativeTag</span>: <span class=\"variable constant_\">NO</span>,</span><br><span class=\"line\">      <span class=\"attr\">performance</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">globalProperties</span>: &#123;&#125;,</span><br><span class=\"line\">      <span class=\"attr\">optionMergeStrategies</span>: &#123;&#125;,</span><br><span class=\"line\">      <span class=\"attr\">isCustomElement</span>: <span class=\"variable constant_\">NO</span>,</span><br><span class=\"line\">      <span class=\"attr\">errorHandler</span>: <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">      <span class=\"attr\">warnHandler</span>: <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">mixins</span>: [],</span><br><span class=\"line\">    <span class=\"attr\">components</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">directives</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">provides</span>: <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>),</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> createAppAPI&lt;<span class=\"title class_\">HostElement</span>&gt;(   <span class=\"attr\">render</span>: <span class=\"title class_\">RootRenderFunction</span>,   hydrate?: <span class=\"title class_\">RootHydrateFunction</span> ): <span class=\"title class_\">CreateAppFunction</span>&lt;<span class=\"title class_\">HostElement</span>&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 返回一个app实例对象</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> context = <span class=\"title function_\">createAppContext</span>()</span><br><span class=\"line\">  <span class=\"comment\">// 创建一个存储所有插件的数组</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> installedPlugins = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>()</span><br><span class=\"line\">  <span class=\"comment\">// 当前dom是否已经挂载</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> isMounted = <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化app实例</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"attr\">app</span>: <span class=\"title class_\">App</span> = (context.<span class=\"property\">app</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">_uid</span>: uid++,</span><br><span class=\"line\">      <span class=\"attr\">_component</span>: rootComponent <span class=\"keyword\">as</span> <span class=\"title class_\">ConcreteComponent</span>,</span><br><span class=\"line\">      <span class=\"attr\">_props</span>: rootProps,</span><br><span class=\"line\">      <span class=\"attr\">_container</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">      <span class=\"attr\">_context</span>: context,</span><br><span class=\"line\">      version,</span><br><span class=\"line\">      <span class=\"keyword\">get</span> <span class=\"title function_\">config</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> context.<span class=\"property\">config</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// 初始化use方法 供插件使用</span></span><br><span class=\"line\">  <span class=\"title function_\">use</span>(<span class=\"params\">plugin: Plugin, options: any[]</span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"title function_\">component</span>(<span class=\"attr\">name</span>: string, component?: <span class=\"title class_\">Component</span>): any &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (__DEV__) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">validateComponentName</span>(name, context.<span class=\"property\">config</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!component) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> context.<span class=\"property\">components</span>[name];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (__DEV__ &amp;&amp; context.<span class=\"property\">components</span>[name]) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">warn</span>(<span class=\"string\">`Component &quot;<span class=\"subst\">$&#123;name&#125;</span>&quot; has already been registered in target app.`</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 添加到执行上下文</span></span><br><span class=\"line\">    context.<span class=\"property\">components</span>[name] = component;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> app;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 初始化全局指令方法</span></span><br><span class=\"line\">  <span class=\"title function_\">directive</span>(<span class=\"params\">name: string, directive?: Directive</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (__DEV__) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">validateDirectiveName</span>(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!directive) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> context.<span class=\"property\">directives</span>[name] <span class=\"keyword\">as</span> any;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 添加到执行上下文</span></span><br><span class=\"line\">    context.<span class=\"property\">directives</span>[name] = directive;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> app;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 初始化实例写在方法</span></span><br><span class=\"line\">  <span class=\"title function_\">unmount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isMounted) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 清空节点</span></span><br><span class=\"line\">      <span class=\"title function_\">render</span>(<span class=\"literal\">null</span>, app.<span class=\"property\">_container</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (__DEV__ || __FEATURE_PROD_DEVTOOLS__) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">devtoolsUnmountApp</span>(app);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 根实例提供方法注入</span></span><br><span class=\"line\">  <span class=\"title function_\">provide</span>(<span class=\"params\">key, value</span>) &#123;</span><br><span class=\"line\">    context.<span class=\"property\">provides</span>[key <span class=\"keyword\">as</span> string] = value;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> app;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 初始化节点挂载</span></span><br><span class=\"line\">  <span class=\"title function_\">mount</span>(<span class=\"attr\">rootContainer</span>: <span class=\"title class_\">HostElement</span>, isHydrate?: boolean): any &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 没有挂载情况下会根据传入的组件创建vnode节点</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!isMounted) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> vnode = <span class=\"title function_\">createVNode</span>(</span><br><span class=\"line\">        <span class=\"comment\">// createApp传进来的组件创建了一个虚拟dom</span></span><br><span class=\"line\">        rootComponent <span class=\"keyword\">as</span> <span class=\"title class_\">ConcreteComponent</span>,</span><br><span class=\"line\">        rootProps</span><br><span class=\"line\">      );</span><br><span class=\"line\">      vnode.<span class=\"property\">appContext</span> = context;</span><br><span class=\"line\">      <span class=\"comment\">// 是否是服务端渲染</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isHydrate &amp;&amp; hydrate) &#123;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果不是服务端渲染的话 调用渲染函数渲染到挂载dom里面</span></span><br><span class=\"line\">        <span class=\"title function_\">render</span>(vnode, rootContainer);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 挂载标识改变</span></span><br><span class=\"line\">      isMounted = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      <span class=\"comment\">// app实例 创建挂载点标识</span></span><br><span class=\"line\">      app.<span class=\"property\">_container</span> = rootContainer;</span><br><span class=\"line\">      <span class=\"comment\">// for devtools and telemetry</span></span><br><span class=\"line\">      (rootContainer <span class=\"keyword\">as</span> any).<span class=\"property\">__vue_app__</span> = app;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (__DEV__ || __FEATURE_PROD_DEVTOOLS__) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">devtoolsInitApp</span>(app, version);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> vnode.<span class=\"property\">component</span>!.<span class=\"property\">proxy</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (__DEV__) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 开发环境下重复挂载报警</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>从上图可知, ensureRenderer().createApp(…args)实际上直接调用了 createAppAPI 的 createApp 后，重写了 app 的 mount 方法，至于为什么要重写 mount 方法，主要还是应对后面的跨平台改造，mount 作为一个独立的跨平台处理函数，不应该带有特定的平台的逻辑，而这里仅仅针对 web，挂载前清空容器内容则是为了防止其他异常情况导致保存了该段代码，那么下面就分析下 createApp 做了什么 下面是主要源码注释</p></blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// packages/runtime-core/src/apiCreateApp.ts</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>createApp 里面创建了 context 实例，并且为 context 里面的 app 属性初始化了 use 方法提供全局插件挂载，mixin 方法提供全局逻辑混入，component 方法提供全局组件注册，directive 提供全局指令注册，mount,unmount 提供组件挂载&#x2F;卸载功能等。同时将这个 4 个方法赋予 context,将 contxt 自己挂载在 app 属性的\\_context 执行上下文中，并将其赋值给了一个新的 app 常量返回出去, mount 方法里面执行了 vnode 建立 &#x3D;&gt; vnode 渲染的过程，最终交给 render 函数通过底层的 dom 操作插入到 rootContainer 里面，至于 render 函数的详细执行过程，给我一点时间整理。</p></blockquote>\n","text":"自己接触 Vue3 也有一段时间了 之前一直有看相关的源码，现在总结下 creatApp 到 mount 挂载中间发生了什么 下面的代码均为精简版 删掉了部分不...","permalink":"/post/Vue3源码 实例初始化过程详解","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"Vue","slug":"Vue","count":6,"path":"api/categories/Vue.json"},{"name":"总结","slug":"Vue/总结","count":6,"path":"api/categories/Vue/总结.json"},{"name":"Vue源码","slug":"Vue/总结/Vue源码","count":5,"path":"api/categories/Vue/总结/Vue源码.json"}],"tags":[{"name":"Vue3","slug":"Vue3","count":2,"path":"api/tags/Vue3.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%85%A5%E5%8F%A3%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">查看入口文档</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-1\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"谢小谢","slug":"blog-author","avatar":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/logo24.png","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Webpack4优化之依赖包cdn加载优化","uid":"18236e9a0226f101897836af69d7e11a","slug":"Webpack4优化之依赖包cdn加载优化","date":"2022-03-04T16:00:00.000Z","updated":"2024-06-07T03:20:18.000Z","comments":true,"path":"api/articles/Webpack4优化之依赖包cdn加载优化.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/webpack.png","text":"记录一下自己项目使用 cdn 加速的具体过程，就是分离外部库的包(包括 vue, vue-router, vuex 等)，尽量只保留主要逻辑 准备工作首先确定一...","permalink":"/post/Webpack4优化之依赖包cdn加载优化","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"webpack","slug":"webpack","count":2,"path":"api/categories/webpack.json"},{"name":"总结","slug":"webpack/总结","count":2,"path":"api/categories/webpack/总结.json"},{"name":"Vue","slug":"webpack/总结/Vue","count":1,"path":"api/categories/webpack/总结/Vue.json"}],"tags":[{"name":"webpack","slug":"webpack","count":2,"path":"api/tags/webpack.json"}],"author":{"name":"谢小谢","slug":"blog-author","avatar":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/logo24.png","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Vue2.6系列源码解析之Keep-Alive组件的缓存逻辑","uid":"b5ff54a9d086ee4b944aa5321b46f563","slug":"Vue2.6系列源码解析之Keep-Alive组件的缓存逻辑2022-02-03","date":"2022-02-02T16:00:00.000Z","updated":"2024-06-07T03:20:18.000Z","comments":true,"path":"api/articles/Vue2.6系列源码解析之Keep-Alive组件的缓存逻辑2022-02-03.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/vue-01.jpg","text":"对于很多用过 vue 这个框架的人来说，想必都用过 keep-alive 组件缓存功能。vue 内部使用了 LRU 缓存淘汰算法来实现组件的缓存更新问题，那 v...","permalink":"/post/Vue2.6系列源码解析之Keep-Alive组件的缓存逻辑2022-02-03","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"Vue","slug":"Vue","count":6,"path":"api/categories/Vue.json"},{"name":"总结","slug":"Vue/总结","count":6,"path":"api/categories/Vue/总结.json"},{"name":"Vue源码","slug":"Vue/总结/Vue源码","count":5,"path":"api/categories/Vue/总结/Vue源码.json"}],"tags":[{"name":"Vue","slug":"Vue","count":8,"path":"api/tags/Vue.json"}],"author":{"name":"谢小谢","slug":"blog-author","avatar":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/logo24.png","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}