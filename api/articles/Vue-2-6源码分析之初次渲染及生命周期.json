{"title":"Vue-2-6源码分析之初次渲染及生命周期","uid":"b1597152b0a9a80173a513e01c3e8d7a","slug":"Vue-2-6源码分析之初次渲染及生命周期","date":"2024-06-27T03:50:12.000Z","updated":"2024-06-27T07:23:03.698Z","comments":true,"path":"api/articles/Vue-2-6源码分析之初次渲染及生命周期.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/vue-01.jpg","content":"<div style=\"display: flex;justify-content: center;\">\n  <img src='https://chlblog.oss-cn-guangzhou.aliyuncs.com/shengmingzhouqi1.png' style=\"width: 100%\" />\n</div>\n\n<h4 id=\"渲染流程：\"><a href=\"#渲染流程：\" class=\"headerlink\" title=\"渲染流程：\"></a>渲染流程：</h4><div>\n  <li>\n    依次判断是否有render、template；\n  </li>\n  <li>\n    在没有template且存在el,就直接拿el.outerHTML；\n  </li>\n   <li>\n    有template且存在el：\n    <ul>\n      <li>生成ast语法树</li>\n      <li>生成render函数</li>\n    </ul>\n  </li>\n   <li>\n    生成虚拟节点\n  </li>\n  <li>\n    真实节点挂载到页面上\n  </li>\n</div>\n\n<h4 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h4><p><a href=\"https://blog.csdn.net/zhenghuishengq/article/details/128581110?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4-128581110-blog-128253661.235^v43^pc_blog_bottom_relevance_base3&spm=1001.2101.3001.4242.3&utm_relevant_index=5\">生命周期详解</a></p>\n<div>\n  <div style=\"font-weight: 700\"> beforeCreate：</div>\n  <ul>\n    <li>\n      在创建完这个Vue实例之后，会进入一个初始化阶段，初始化生命周期和事件，但数据代理还并没有开始，因此这个阶段是拿不到vm对象以及_data数据的。\n    </li>\n  </ul>\n\n  <div style=\"font-weight: 700\"> created：</div>\n  <ul>\n    <li>\n      进行了数据监测和数据代理的，获取到代理对象。\n    </li>\n  </ul>\n  \n\n  <div style=\"font-weight: 700\"> beforeMount：</div>\n  <ul>\n    <li>\n      Vue已经解析完成的真实DOM，但是此时的vue还没来的及将这些DOM向页面中存放。\n    </li>\n  </ul>\n \n\n  <div style=\"font-weight: 700\"> mounted：</div>\n  <ul>\n    <li>\n      将内存中的虚拟DOM转化为真实DOM存在页面中,在这个函数中对DOM的操作均有效;\n    </li>\n    <li>\n      一般会进行这些操作：开启定时器，发送网络请求，订阅消息，绑定自定义事件等操作\n    </li>\n  </ul>\n\n\n  <div style=\"font-weight: 700\"> beforeUpdate</div>\n  <ul>\n    <li>\n      只要data中的数据发生改变，那么就会触发这个钩子函数;\n    </li>\n    <li>\n      页面上渲染的数据和被改变的数据没有保持同步，就是页面还没有来得及展示被修改的值。\n    </li>\n  </ul>\n  \n\n  <div style=\"font-weight: 700\"> updated</div>\n  <ul>\n    <li>\n      在这个阶段，就会生成新的虚拟DOM，随后通过diff算法，实现新旧的虚拟DOM的比较，最终完成页面的更新。\n    </li>\n  </ul>\n\n\n  <div style=\"font-weight: 700\"> beforeDestory</div>\n  <ul>\n    <li>\n      销毁的实例中的所有的data，methods还有指令等等都是处于可用状态，但是不能对实例中的具体的数据和方法进行一个操作;\n    </li>\n    <li>\n      清除定时器、解绑自定义事件、取消消息订阅等。\n    </li>\n  </ul>\n \n\n  <div style=\"font-weight: 700\"> destoryed</div>\n  <ul>\n    <li>\n      vue实例算是彻底的被销毁了，但是页面上的数据是还在的，但是不能操作上面的数据了。\n    </li>\n  </ul>\n</div>\n\n\n","text":" 渲染流程： 依次判断是否有render、template； 在没有template且存在el,就直接拿el.outerHTML； 有template且存在el...","permalink":"/post/Vue-2-6源码分析之初次渲染及生命周期","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"Vue","slug":"Vue","count":2,"path":"api/categories/Vue.json"},{"name":"总结","slug":"Vue/总结","count":2,"path":"api/categories/Vue/总结.json"},{"name":"Vue源码","slug":"Vue/总结/Vue源码","count":2,"path":"api/categories/Vue/总结/Vue源码.json"}],"tags":[{"name":"Vue","slug":"Vue","count":3,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B8%B2%E6%9F%93%E6%B5%81%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">渲染流程：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\"><span class=\"toc-text\">生命周期</span></a></li></ol>","author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Vue.2.6源码分析之响应式数据原理","uid":"e0084657f452526ce5e427bc65b7869d","slug":"Vue.2.6源码分析之响应式数据原理","date":"2024-07-19T16:00:00.000Z","updated":"2024-06-27T03:15:45.597Z","comments":true,"path":"api/articles/Vue.2.6源码分析之响应式数据原理.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/vue-01.jpg","text":"前言响应式 是 Vue 最独特的特性之一。当修改实例的 data 的属性时，视图会进行更新。vue2 的数据劫持是利用 Object.definePropert...","permalink":"/post/Vue.2.6源码分析之响应式数据原理","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Vue","slug":"Vue","count":2,"path":"api/categories/Vue.json"},{"name":"总结","slug":"Vue/总结","count":2,"path":"api/categories/Vue/总结.json"},{"name":"Vue源码","slug":"Vue/总结/Vue源码","count":2,"path":"api/categories/Vue/总结/Vue源码.json"}],"tags":[{"name":"Vue","slug":"Vue","count":3,"path":"api/tags/Vue.json"}],"author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"uniapp下小程序获取详细定位","uid":"2ea9c9ee829119d28adc607282fb8e16","slug":"uniapp下小程序获取详细定位","date":"2024-04-15T07:53:36.000Z","updated":"2024-06-27T03:15:45.598Z","comments":true,"path":"api/articles/uniapp下小程序获取详细定位.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/gddt.png","text":"前言uniapp自带的API uni.getLocation 仅APP端支持获取adress，小程序是不支持的。 因此可以借助腾讯/高德的API 地理/逆地理编...","permalink":"/post/uniapp下小程序获取详细定位","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"经验","slug":"经验","count":3,"path":"api/categories/经验.json"}],"tags":[{"name":"uniapp小程序","slug":"uniapp小程序","count":1,"path":"api/tags/uniapp小程序.json"},{"name":"地图","slug":"地图","count":1,"path":"api/tags/地图.json"}],"author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}