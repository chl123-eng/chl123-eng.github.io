{"title":"语音识别延伸之滚动定位","uid":"15483feced1e2a527f0fd1a7479d5986","slug":"语音识别延伸之滚动定位","date":"2024-05-24T06:21:42.000Z","updated":"2024-06-27T03:23:12.499Z","comments":true,"path":"api/articles/语音识别延伸之滚动定位.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":null,"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>数组每添加一条数据&nbsp;&nbsp;<span style=\"background:#dbb3e5; color:#fff;padding:5px 5px\">scroll-view</span>&nbsp;&nbsp;需自动滚动到最底部;scroll-view高度动态改变</p>\n\n<div style=\"display: flex;justify-content: center;\">\n    <img src='https://chlblog.oss-cn-guangzhou.aliyuncs.com/gundongdingwei1.png' style=\"width: 200px;margin-right:20px\" />\n    <img src='https://chlblog.oss-cn-guangzhou.aliyuncs.com/gundongdingwei2.png' style=\"width: 200px\" />\n</div>\n\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><h4 id=\"scroll-view-的设置\"><a href=\"#scroll-view-的设置\" class=\"headerlink\" title=\"scroll-view 的设置\"></a>scroll-view 的设置</h4><p>主要是设置 scroll-view 的<span style=\"background:#dbb3e5; color:#fff;padding:5px 5px\">scroll-top</span>&nbsp;&nbsp;<br><span style=\"background:#dbb3e5; color:#fff;padding:5px 5px\">:scroll-with-animation&#x3D;”true”</span>&nbsp;&nbsp;滚动时添加滑动效果，过渡更自然；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;scroll-view scroll-y=&quot;true&quot;</span><br><span class=\"line\">    ref=&quot;contentBox&quot;</span><br><span class=\"line\">    :scroll-with-animation=&quot;true&quot;</span><br><span class=\"line\">    :scroll-top=&quot;scrollTop&quot;</span><br><span class=\"line\">    class=&quot;content&quot;</span><br><span class=\"line\">    :style=&quot;&#123;height:scrollViewHeight+&#x27;px&#x27;&#125;&quot;&gt;</span><br><span class=\"line\">    &lt;view id=&quot;content&quot; ref=&quot;contentBox&quot;&gt;</span><br><span class=\"line\">    &lt;/view&gt;</span><br><span class=\"line\">&lt;/scroll-view&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"切换发送信息模式时动态设置-scroll-view-的高度\"><a href=\"#切换发送信息模式时动态设置-scroll-view-的高度\" class=\"headerlink\" title=\"切换发送信息模式时动态设置 scroll-view 的高度\"></a>切换发送信息模式时动态设置 scroll-view 的高度</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getScrollViewHeight(height)&#123;</span><br><span class=\"line\">    this.$nextTick(()=&gt;&#123;</span><br><span class=\"line\">        uni.createSelectorQuery().in(this).select(&#x27;.AIrecognition&#x27;).boundingClientRect((res)=&gt;&#123;</span><br><span class=\"line\">          this.scrollViewHeight = res.height - height;</span><br><span class=\"line\">        &#125;).exec();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> watch: &#123;</span><br><span class=\"line\">    sendMethods_keyBoard(val)&#123;</span><br><span class=\"line\">        if(!val)&#123;</span><br><span class=\"line\">            this.getScrollViewHeight(345);</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            this.getScrollViewHeight(175);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"监听添加数据时滚动到最底部\"><a href=\"#监听添加数据时滚动到最底部\" class=\"headerlink\" title=\"监听添加数据时滚动到最底部\"></a>监听添加数据时滚动到最底部</h4><p><span style=\"color: red\">tip:</span>如果用 this.$nextTick 会因为数据还没更新完成就加载页面，导致页面数据被隐藏一部分；所以要用 setTimeout</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrollToBottom()&#123;</span><br><span class=\"line\">    setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        uni.createSelectorQuery().in(this).select(&#x27;#content&#x27;).boundingClientRect((res)=&gt;&#123;</span><br><span class=\"line\">            let top = res.height-this.scrollViewHeight;</span><br><span class=\"line\">            if(top&gt;0)&#123;</span><br><span class=\"line\">                this.scrollTop=top;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).exec()</span><br><span class=\"line\">    &#125;,300)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch: &#123;</span><br><span class=\"line\">    content_list() &#123;</span><br><span class=\"line\">      this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">        this.scrollToBottom();</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n","feature":true,"text":"前言数组每添加一条数据 scroll-view 需自动滚动到最底部;scroll-view高度动态改变 具体代码scroll-view 的设置主要是设置 scr...","permalink":"/post/语音识别延伸之滚动定位","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"经验","slug":"经验","count":3,"path":"api/categories/经验.json"}],"tags":[{"name":"语音识别 -滚动定位","slug":"语音识别-滚动定位","count":1,"path":"api/tags/语音识别-滚动定位.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">具体代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#scroll-view-%E7%9A%84%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">scroll-view 的设置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%87%E6%8D%A2%E5%8F%91%E9%80%81%E4%BF%A1%E6%81%AF%E6%A8%A1%E5%BC%8F%E6%97%B6%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE-scroll-view-%E7%9A%84%E9%AB%98%E5%BA%A6\"><span class=\"toc-text\">切换发送信息模式时动态设置 scroll-view 的高度</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%91%E5%90%AC%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E6%97%B6%E6%BB%9A%E5%8A%A8%E5%88%B0%E6%9C%80%E5%BA%95%E9%83%A8\"><span class=\"toc-text\">监听添加数据时滚动到最底部</span></a></li></ol></li></ol>","author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"uniapp之语音识别","uid":"4407c684d9dcb340bbb7fb0a49aa746d","slug":"uniapp之语音识别","date":"2024-05-23T03:42:24.000Z","updated":"2024-06-27T03:30:56.855Z","comments":true,"path":"api/articles/uniapp之语音识别.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":null,"text":"前言在hbuilder中引入百度语音识别集成平台，实现 AI语音识别 操作方式引入百度语音 manifest.json 文件 百度 AI 平台获取 key 值h...","permalink":"/post/uniapp之语音识别","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"经验","slug":"经验","count":3,"path":"api/categories/经验.json"}],"tags":[{"name":"uniapp","slug":"uniapp","count":1,"path":"api/tags/uniapp.json"},{"name":"语音识别","slug":"语音识别","count":1,"path":"api/tags/语音识别.json"}],"author":{"name":"May","slug":"blog-author","avatar":"https://chlblog.oss-cn-guangzhou.aliyuncs.com/logo.jpg","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}