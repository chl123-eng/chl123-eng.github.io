{"title":"组件库按需加载声明文件(d.ts)编写","uid":"042d33a635bea50f9dee5448c961536b","slug":"组件库按需加载声明文件(d.ts)编写","date":"2021-02-22T16:00:00.000Z","updated":"2024-06-07T03:20:18.000Z","comments":true,"path":"api/articles/组件库按需加载声明文件(d.ts)编写.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/fat01.jpg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>自己的 Fat-ui 组件库和 babel 按需加载插件写完之后，也抽空把 d.ts 声明文件一起做了，现在将编写和配置过程记录下来</p>\n<h2 id=\"第一步-首先分析下-Vue3-插件注册时的部分源代码\"><a href=\"#第一步-首先分析下-Vue3-插件注册时的部分源代码\" class=\"headerlink\" title=\"第一步 首先分析下 Vue3 插件注册时的部分源代码\"></a>第一步 首先分析下 Vue3 插件注册时的部分源代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 文件地址： vue-next/packages/runtime-core/src/apiCreateApp.ts</span></span><br><span class=\"line\"><span class=\"comment\">// 创建一个存储所有插件的列表</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> installedPlugins = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>()</span><br><span class=\"line\"><span class=\"comment\">// use方法使用插件</span></span><br><span class=\"line\"><span class=\"title function_\">use</span>(<span class=\"params\">plugin: Plugin, ...options: any[]</span>) &#123;</span><br><span class=\"line\"> <span class=\"comment\">// 如果列表里面已经注册了 那么就提示</span></span><br><span class=\"line\"> <span class=\"keyword\">if</span> (installedPlugins.<span class=\"title function_\">has</span>(plugin)) &#123;</span><br><span class=\"line\">   __DEV__ &amp;&amp; <span class=\"title function_\">warn</span>(<span class=\"string\">`Plugin has already been applied to target app.`</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 如果插件的install是一个函数 那么推入插件列表 并且直接执行install</span></span><br><span class=\"line\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (plugin &amp;&amp; <span class=\"title function_\">isFunction</span>(plugin.<span class=\"property\">install</span>)) &#123;</span><br><span class=\"line\">  installedPlugins.<span class=\"title function_\">add</span>(plugin)</span><br><span class=\"line\">  plugin.<span class=\"title function_\">install</span>(app, ...options)</span><br><span class=\"line\">  <span class=\"comment\">// 如果插件是一个函数 那么也是直接执行 因为插件注册有2种方式</span></span><br><span class=\"line\">  <span class=\"comment\">// 1.对象里面带install函数</span></span><br><span class=\"line\">  <span class=\"comment\">// 2.函数</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title function_\">isFunction</span>(plugin)) &#123;</span><br><span class=\"line\">    installedPlugins.<span class=\"title function_\">add</span>(plugin)</span><br><span class=\"line\">    <span class=\"title function_\">plugin</span>(app, ...options)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (__DEV__) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> app</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>从上图可知插件里面需要注册一个 install 方法</p>\n<h2 id=\"第二步-首先需要定义全局组件注册的-d-ts\"><a href=\"#第二步-首先需要定义全局组件注册的-d-ts\" class=\"headerlink\" title=\"第二步 首先需要定义全局组件注册的 d.ts\"></a>第二步 首先需要定义全局组件注册的 d.ts</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.<span class=\"property\">d</span>.<span class=\"property\">ts</span> <span class=\"keyword\">import</span> &#123; <span class=\"title class_\">App</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 定义了一个class</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FatComponent</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"attr\">name</span>: string</span><br><span class=\"line\"><span class=\"comment\">// 传入App实例</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"attr\">install</span>: <span class=\"function\">(<span class=\"params\">app: App</span>) =&gt;</span> any &#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">button</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">FatComponent</span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h3><p>通过上面的 d.ts 编写后 就可以直接在 package.json 的 typings 指定声明文件的地址了, 声明之后就可以直接打包</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; <span class=\"string\">&quot;typings&quot;</span>: <span class=\"string\">&quot;types/index.d.ts&quot;</span>,   ... &#125;</span><br></pre></td></tr></table></figure>\n","text":"前言自己的 Fat-ui 组件库和 babel 按需加载插件写完之后，也抽空把 d.ts 声明文件一起做了，现在将编写和配置过程记录下来 第一步 首先分析下 V...","permalink":"/post/组件库按需加载声明文件(d.ts)编写","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"库相关","slug":"库相关","count":1,"path":"api/categories/库相关.json"},{"name":"经验","slug":"库相关/经验","count":1,"path":"api/categories/库相关/经验.json"}],"tags":[{"name":"Vue","slug":"Vue","count":8,"path":"api/tags/Vue.json"},{"name":"组件库","slug":"组件库","count":2,"path":"api/tags/组件库.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E6%AD%A5-%E9%A6%96%E5%85%88%E5%88%86%E6%9E%90%E4%B8%8B-Vue3-%E6%8F%92%E4%BB%B6%E6%B3%A8%E5%86%8C%E6%97%B6%E7%9A%84%E9%83%A8%E5%88%86%E6%BA%90%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">第一步 首先分析下 Vue3 插件注册时的部分源代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E6%AD%A5-%E9%A6%96%E5%85%88%E9%9C%80%E8%A6%81%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6%E6%B3%A8%E5%86%8C%E7%9A%84-d-ts\"><span class=\"toc-text\">第二步 首先需要定义全局组件注册的 d.ts</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E6%AD%A5\"><span class=\"toc-text\">第三步</span></a></li></ol></li></ol>","author":{"name":"谢小谢","slug":"blog-author","avatar":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/logo24.png","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"安卓IOS应用桥接js","uid":"cbaa866e1d73edd3734c218b3bd40e4c","slug":"安卓IOS应用桥接js","date":"2021-02-24T16:00:00.000Z","updated":"2024-06-07T03:20:18.000Z","comments":true,"path":"api/articles/安卓IOS应用桥接js.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":null,"text":"记录下自己公司和 js 友商的 APP 桥接的过程 ## 代码展示 1234567891011121314151617181920212223242526272...","permalink":"/post/安卓IOS应用桥接js","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"APP","slug":"APP","count":1,"path":"api/tags/APP.json"}],"author":{"name":"谢小谢","slug":"blog-author","avatar":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/logo24.png","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"定制自己的 Fat-ui 组件库之如何编写自己的按需加载 babel 插件","uid":"5355fae89eaca8d398dfae233dd715c4","slug":"定制自己的 Fat-ui 组件库之如何编写自己的按需加载 babel 插件","date":"2021-02-21T16:00:00.000Z","updated":"2024-06-07T03:20:18.000Z","comments":true,"path":"api/articles/定制自己的 Fat-ui 组件库之如何编写自己的按需加载 babel 插件.json","keywords":"蔡惠霖的博客，前端开发，Vue，Node.js","cover":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/babel.jpeg","text":"作为一名前端开发工程师 我一直想拥有自己的一套组件库，最近把 Fat-ui 的几个组件已经完成，现在将之前的按需加载 babel 插件编写过程记录下来 可以下载...","permalink":"/post/定制自己的 Fat-ui 组件库之如何编写自己的按需加载 babel 插件","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"经验","slug":"经验","count":6,"path":"api/categories/经验.json"}],"tags":[{"name":"babel","slug":"babel","count":1,"path":"api/tags/babel.json"}],"author":{"name":"谢小谢","slug":"blog-author","avatar":"https://blog-1300014307.cos.ap-guangzhou.myqcloud.com/logo24.png","link":"/","description":"Love Music, love life","socials":{"github":"https://github.com/ShuHongXie","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}